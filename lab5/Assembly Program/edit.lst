     1                                  section .data
     2 00000000 68657920686F772061-     input db "hey how are you? I am fine thank you!", 0
     2 00000009 726520796F753F2049-
     2 00000012 20616D2066696E6520-
     2 0000001B 7468616E6B20796F75-
     2 00000024 2100               
     3                                  len equ $-input
     4 00000026 000000000000000000-     output db 100 dup(0)  ; allocate space for output string
     4 0000002F 000000000000000000-
     4 00000038 000000000000000000-
     4 00000041 000000000000000000-
     4 0000004A 000000000000000000-
     4 00000053 000000000000000000-
     4 0000005C 000000000000000000-
     4 00000065 000000000000000000-
     4 0000006E 000000000000000000-
     4 00000077 000000000000000000-
     4 00000080 000000000000000000-
     4 00000089 00                 
     5 0000008A 4145494F556165696F-     vowels db "AEIOUaeiou"
     5 00000093 75                 
     6                                  vowelsNumber equ $-vowels
     7                                  
     8                                  section .text
     9                                  global _start
    10                                  
    11                                  _start:
    12 00000000 E80A000000                  call delete_vowels
    13                                  
    14                                  exit:
    15 00000005 B83C000000                  mov rax, 60; системная функция 60 (exit)
    16 0000000A 4831FF                      xor rdi, rdi; return code 0
    17 0000000D 0F05                        syscall; вызов системной функции
    18                                  
    19                                  delete_vowels:
    20 0000000F 55                          push rbp
    21 00000010 4889E5                      mov rbp, rsp
    22 00000013 48BE-                       mov rsi, input  ; point to first character of input
    22 00000015 [0000000000000000] 
    23 0000001D 48BF-                       mov rdi, output ; point to start of output buffer
    23 0000001F [2600000000000000] 
    24 00000027 4831C9                      xor rcx, rcx   ; initialize character count to
    25                                  
    26                                  loop_start:
    27 0000002A 8A06                        mov al, [rsi]  ; load current character into eax
    28 0000002C 3C00                        cmp al, 0      ; check if we've reached the end of the string
    29 0000002E 7427                        je done        ; if so, jump to done
    30                                      
    31 00000030 51                          push rcx
    32 00000031 57                          push rdi
    33                                      
    34                                      check_char_occurrence:; на входе: al - текущий символ, ecx - счетчик, edi - указатель на начало строки
    35 00000032 B90A000000                      mov rcx, vowelsNumber
    36 00000037 48BF-                           mov rdi, vowels
    36 00000039 [8A00000000000000] 
    37 00000041 FC                              cld
    38 00000042 F2AE                            repne scasb
    39                                      
    40 00000044 5F                          pop rdi
    41 00000045 59                          pop rcx
    42 00000046 740A                        je is_vowel
    43                                      
    44                                  not_vowel:
    45 00000048 8807                        mov [rdi], al   ; copy current character to output buffer
    46 0000004A 48FFC6                      inc rsi          ; move to next character
    47 0000004D 48FFC7                      inc rdi
    48 00000050 E2D8                        loop loop_start ; jump to loop_start
    49                                  
    50                                  is_vowel:
    51 00000052 48FFC6                      inc rsi
    52 00000055 E2D3                        loop loop_start ; jump to loop_start
    53                                  
    54                                  done:
    55 00000057 C60700                      mov byte [rdi], 0 ; add null terminator to output string
    56 0000005A B801000000                  mov	rax, 1	        ; файловый дескриптор (stdout)
    57 0000005F BF01000000                  mov	rdi, 1	        ; номер системного вызова (sys_write)
    58 00000064 BA64000000                  mov	rdx, 100	    ; длина сообщения
    59 00000069 48BE-                       mov	rsi, output	        ; сообщение для вывода на экран
    59 0000006B [2600000000000000] 
    60 00000073 0F05                        syscall
    61                                  final_done:
    62 00000075 5D                          pop rbp
    63 00000076 C3                          ret
